// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.10
// 	protoc        v3.14.0
// source: fullMarketData.proto

package stream

import (
	stream "github.com/bhbosman/gocommon/stream"
	goerrors "github.com/bhbosman/goerrors"
	goprotoextra "github.com/bhbosman/goprotoextra"
	proto "google.golang.org/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderSide int32

const (
	OrderSide_BidOrder OrderSide = 0
	OrderSide_AskOrder OrderSide = 1
)

// Enum value maps for OrderSide.
var (
	OrderSide_name = map[int32]string{
		0: "BidOrder",
		1: "AskOrder",
	}
	OrderSide_value = map[string]int32{
		"BidOrder": 0,
		"AskOrder": 1,
	}
)

func (x OrderSide) Enum() *OrderSide {
	p := new(OrderSide)
	*p = x
	return p
}

func (x OrderSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderSide) Descriptor() protoreflect.EnumDescriptor {
	return file_fullMarketData_proto_enumTypes[0].Descriptor()
}

func (OrderSide) Type() protoreflect.EnumType {
	return &file_fullMarketData_proto_enumTypes[0]
}

func (x OrderSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderSide.Descriptor instead.
func (OrderSide) EnumDescriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{0}
}

type FullMarketData_Clear struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName   string `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instrument string `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
}

func (x *FullMarketData_Clear) Reset() {
	*x = FullMarketData_Clear{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_Clear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_Clear) ProtoMessage() {}

func (x *FullMarketData_Clear) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_Clear.ProtoReflect.Descriptor instead.
func (*FullMarketData_Clear) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{0}
}

func (x *FullMarketData_Clear) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_Clear) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (self *FullMarketData_Clear) TypeCode() uint32 {
	return FullMarketData_ClearTypeCode
}

type FullMarketData_AddOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Side      OrderSide `protobuf:"varint,2,opt,name=side,proto3,enum=golang.example.policy.OrderSide" json:"side,omitempty"`
	Id        string    `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Price     float64   `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume    float64   `protobuf:"fixed64,5,opt,name=volume,proto3" json:"volume,omitempty"`
	ExtraData []byte    `protobuf:"bytes,6,opt,name=extraData,proto3" json:"extraData,omitempty"`
}

func (x *FullMarketData_AddOrder) Reset() {
	*x = FullMarketData_AddOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_AddOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_AddOrder) ProtoMessage() {}

func (x *FullMarketData_AddOrder) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_AddOrder.ProtoReflect.Descriptor instead.
func (*FullMarketData_AddOrder) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{1}
}

func (x *FullMarketData_AddOrder) GetSide() OrderSide {
	if x != nil {
		return x.Side
	}
	return OrderSide_BidOrder
}

func (x *FullMarketData_AddOrder) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullMarketData_AddOrder) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *FullMarketData_AddOrder) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *FullMarketData_AddOrder) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (self *FullMarketData_AddOrder) TypeCode() uint32 {
	return FullMarketData_AddOrderTypeCode
}

type FullMarketData_AddOrderInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName   string                   `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instrument string                   `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Order      *FullMarketData_AddOrder `protobuf:"bytes,3,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *FullMarketData_AddOrderInstruction) Reset() {
	*x = FullMarketData_AddOrderInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_AddOrderInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_AddOrderInstruction) ProtoMessage() {}

func (x *FullMarketData_AddOrderInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_AddOrderInstruction.ProtoReflect.Descriptor instead.
func (*FullMarketData_AddOrderInstruction) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{2}
}

func (x *FullMarketData_AddOrderInstruction) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_AddOrderInstruction) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FullMarketData_AddOrderInstruction) GetOrder() *FullMarketData_AddOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (self *FullMarketData_AddOrderInstruction) TypeCode() uint32 {
	return FullMarketData_AddOrderInstructionTypeCode
}

type FullMarketData_ReduceVolumeInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName   string  `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instrument string  `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Id         string  `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Volume     float64 `protobuf:"fixed64,4,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *FullMarketData_ReduceVolumeInstruction) Reset() {
	*x = FullMarketData_ReduceVolumeInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_ReduceVolumeInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_ReduceVolumeInstruction) ProtoMessage() {}

func (x *FullMarketData_ReduceVolumeInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_ReduceVolumeInstruction.ProtoReflect.Descriptor instead.
func (*FullMarketData_ReduceVolumeInstruction) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{3}
}

func (x *FullMarketData_ReduceVolumeInstruction) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_ReduceVolumeInstruction) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FullMarketData_ReduceVolumeInstruction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FullMarketData_ReduceVolumeInstruction) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (self *FullMarketData_ReduceVolumeInstruction) TypeCode() uint32 {
	return FullMarketData_ReduceVolumeInstructionTypeCode
}

type FullMarketData_DeleteOrderInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName   string `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instrument string `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Id         string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FullMarketData_DeleteOrderInstruction) Reset() {
	*x = FullMarketData_DeleteOrderInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_DeleteOrderInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_DeleteOrderInstruction) ProtoMessage() {}

func (x *FullMarketData_DeleteOrderInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_DeleteOrderInstruction.ProtoReflect.Descriptor instead.
func (*FullMarketData_DeleteOrderInstruction) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{4}
}

func (x *FullMarketData_DeleteOrderInstruction) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_DeleteOrderInstruction) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FullMarketData_DeleteOrderInstruction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (self *FullMarketData_DeleteOrderInstruction) TypeCode() uint32 {
	return FullMarketData_DeleteOrderInstructionTypeCode
}

type FullMarketData_RemoveInstrumentInstruction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName   string `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instrument string `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
}

func (x *FullMarketData_RemoveInstrumentInstruction) Reset() {
	*x = FullMarketData_RemoveInstrumentInstruction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_RemoveInstrumentInstruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_RemoveInstrumentInstruction) ProtoMessage() {}

func (x *FullMarketData_RemoveInstrumentInstruction) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_RemoveInstrumentInstruction.ProtoReflect.Descriptor instead.
func (*FullMarketData_RemoveInstrumentInstruction) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{5}
}

func (x *FullMarketData_RemoveInstrumentInstruction) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_RemoveInstrumentInstruction) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (self *FullMarketData_RemoveInstrumentInstruction) TypeCode() uint32 {
	return FullMarketData_RemoveInstrumentInstructionTypeCode
}

type FullMarketData_InstrumentList_Subscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FullMarketData_InstrumentList_Subscribe) Reset() {
	*x = FullMarketData_InstrumentList_Subscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_InstrumentList_Subscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_InstrumentList_Subscribe) ProtoMessage() {}

func (x *FullMarketData_InstrumentList_Subscribe) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_InstrumentList_Subscribe.ProtoReflect.Descriptor instead.
func (*FullMarketData_InstrumentList_Subscribe) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{6}
}

func (self *FullMarketData_InstrumentList_Subscribe) TypeCode() uint32 {
	return FullMarketData_InstrumentList_SubscribeTypeCode
}

type FullMarketData_InstrumentList_Unsubscribe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FullMarketData_InstrumentList_Unsubscribe) Reset() {
	*x = FullMarketData_InstrumentList_Unsubscribe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_InstrumentList_Unsubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_InstrumentList_Unsubscribe) ProtoMessage() {}

func (x *FullMarketData_InstrumentList_Unsubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_InstrumentList_Unsubscribe.ProtoReflect.Descriptor instead.
func (*FullMarketData_InstrumentList_Unsubscribe) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{7}
}

func (self *FullMarketData_InstrumentList_Unsubscribe) TypeCode() uint32 {
	return FullMarketData_InstrumentList_UnsubscribeTypeCode
}

type FullMarketData_InstrumentList_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FullMarketData_InstrumentList_Request) Reset() {
	*x = FullMarketData_InstrumentList_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_InstrumentList_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_InstrumentList_Request) ProtoMessage() {}

func (x *FullMarketData_InstrumentList_Request) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_InstrumentList_Request.ProtoReflect.Descriptor instead.
func (*FullMarketData_InstrumentList_Request) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{8}
}

func (self *FullMarketData_InstrumentList_Request) TypeCode() uint32 {
	return FullMarketData_InstrumentList_RequestTypeCode
}

type InstrumentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instrument string `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Status     string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InstrumentStatus) Reset() {
	*x = InstrumentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstrumentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstrumentStatus) ProtoMessage() {}

func (x *InstrumentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstrumentStatus.ProtoReflect.Descriptor instead.
func (*InstrumentStatus) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{9}
}

func (x *InstrumentStatus) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *InstrumentStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (self *InstrumentStatus) TypeCode() uint32 {
	return InstrumentStatusTypeCode
}

type FullMarketData_InstrumentList_Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName    string              `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instruments []*InstrumentStatus `protobuf:"bytes,2,rep,name=instruments,proto3" json:"instruments,omitempty"`
}

func (x *FullMarketData_InstrumentList_Response) Reset() {
	*x = FullMarketData_InstrumentList_Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_InstrumentList_Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_InstrumentList_Response) ProtoMessage() {}

func (x *FullMarketData_InstrumentList_Response) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_InstrumentList_Response.ProtoReflect.Descriptor instead.
func (*FullMarketData_InstrumentList_Response) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{10}
}

func (x *FullMarketData_InstrumentList_Response) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_InstrumentList_Response) GetInstruments() []*InstrumentStatus {
	if x != nil {
		return x.Instruments
	}
	return nil
}

func (self *FullMarketData_InstrumentList_Response) TypeCode() uint32 {
	return FullMarketData_InstrumentList_ResponseTypeCode
}

type FullMarketData_Instrument_Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instrument   string `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	RegisterName string `protobuf:"bytes,2,opt,name=registerName,proto3" json:"registerName,omitempty"`
}

func (x *FullMarketData_Instrument_Register) Reset() {
	*x = FullMarketData_Instrument_Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_Instrument_Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_Instrument_Register) ProtoMessage() {}

func (x *FullMarketData_Instrument_Register) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_Instrument_Register.ProtoReflect.Descriptor instead.
func (*FullMarketData_Instrument_Register) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{11}
}

func (x *FullMarketData_Instrument_Register) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FullMarketData_Instrument_Register) GetRegisterName() string {
	if x != nil {
		return x.RegisterName
	}
	return ""
}

func (self *FullMarketData_Instrument_Register) TypeCode() uint32 {
	return FullMarketData_Instrument_RegisterTypeCode
}

type FullMarketData_Instrument_Unregister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Instrument   string `protobuf:"bytes,1,opt,name=instrument,proto3" json:"instrument,omitempty"`
	RegisterName string `protobuf:"bytes,2,opt,name=registerName,proto3" json:"registerName,omitempty"`
}

func (x *FullMarketData_Instrument_Unregister) Reset() {
	*x = FullMarketData_Instrument_Unregister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_Instrument_Unregister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_Instrument_Unregister) ProtoMessage() {}

func (x *FullMarketData_Instrument_Unregister) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_Instrument_Unregister.ProtoReflect.Descriptor instead.
func (*FullMarketData_Instrument_Unregister) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{12}
}

func (x *FullMarketData_Instrument_Unregister) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FullMarketData_Instrument_Unregister) GetRegisterName() string {
	if x != nil {
		return x.RegisterName
	}
	return ""
}

func (self *FullMarketData_Instrument_Unregister) TypeCode() uint32 {
	return FullMarketData_Instrument_UnregisterTypeCode
}

type FullMarketData_Instrument_InstrumentStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeedName   string `protobuf:"bytes,1,opt,name=FeedName,proto3" json:"FeedName,omitempty"`
	Instrument string `protobuf:"bytes,2,opt,name=instrument,proto3" json:"instrument,omitempty"`
	Status     string `protobuf:"bytes,3,opt,name=Status,proto3" json:"Status,omitempty"`
}

func (x *FullMarketData_Instrument_InstrumentStatus) Reset() {
	*x = FullMarketData_Instrument_InstrumentStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fullMarketData_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullMarketData_Instrument_InstrumentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullMarketData_Instrument_InstrumentStatus) ProtoMessage() {}

func (x *FullMarketData_Instrument_InstrumentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fullMarketData_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullMarketData_Instrument_InstrumentStatus.ProtoReflect.Descriptor instead.
func (*FullMarketData_Instrument_InstrumentStatus) Descriptor() ([]byte, []int) {
	return file_fullMarketData_proto_rawDescGZIP(), []int{13}
}

func (x *FullMarketData_Instrument_InstrumentStatus) GetFeedName() string {
	if x != nil {
		return x.FeedName
	}
	return ""
}

func (x *FullMarketData_Instrument_InstrumentStatus) GetInstrument() string {
	if x != nil {
		return x.Instrument
	}
	return ""
}

func (x *FullMarketData_Instrument_InstrumentStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (self *FullMarketData_Instrument_InstrumentStatus) TypeCode() uint32 {
	return FullMarketData_Instrument_InstrumentStatusTypeCode
}

var File_fullMarketData_proto protoreflect.FileDescriptor

var file_fullMarketData_proto_rawDesc = []byte{
	0x0a, 0x14, 0x66, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x52, 0x0a, 0x14, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x5f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0xab, 0x01, 0x0a, 0x17, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x04, 0x73, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x52,
	0x04, 0x73, 0x69, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xa6, 0x01, 0x0a, 0x22, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x5f, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x46, 0x75, 0x6c, 0x6c,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x41, 0x64, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x8c, 0x01, 0x0a, 0x26, 0x46,
	0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x52, 0x65,
	0x64, 0x75, 0x63, 0x65, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x73, 0x0a, 0x25, 0x46, 0x75, 0x6c,
	0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x68,
	0x0a, 0x2a, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x5f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x29, 0x0a, 0x27, 0x46, 0x75, 0x6c, 0x6c,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x22, 0x2b, 0x0a, 0x29, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x5f, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0x27, 0x0a, 0x25, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x10, 0x49, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x26, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x68, 0x0a, 0x22, 0x46, 0x75, 0x6c, 0x6c, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x6a, 0x0a, 0x24, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x80, 0x01,
	0x0a, 0x2a, 0x46, 0x75, 0x6c, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x5f, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x46, 0x65, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2a, 0x27, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x12, 0x0c, 0x0a,
	0x08, 0x42, 0x69, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41,
	0x73, 0x6b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x10, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fullMarketData_proto_rawDescOnce sync.Once
	file_fullMarketData_proto_rawDescData = file_fullMarketData_proto_rawDesc
)

func file_fullMarketData_proto_rawDescGZIP() []byte {
	file_fullMarketData_proto_rawDescOnce.Do(func() {
		file_fullMarketData_proto_rawDescData = protoimpl.X.CompressGZIP(file_fullMarketData_proto_rawDescData)
	})
	return file_fullMarketData_proto_rawDescData
}

var file_fullMarketData_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fullMarketData_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_fullMarketData_proto_goTypes = []interface{}{
	(OrderSide)(0),                                     // 0: golang.example.policy.OrderSide
	(*FullMarketData_Clear)(nil),                       // 1: golang.example.policy.FullMarketData_Clear
	(*FullMarketData_AddOrder)(nil),                    // 2: golang.example.policy.FullMarketData_AddOrder
	(*FullMarketData_AddOrderInstruction)(nil),         // 3: golang.example.policy.FullMarketData_AddOrderInstruction
	(*FullMarketData_ReduceVolumeInstruction)(nil),     // 4: golang.example.policy.FullMarketData_ReduceVolumeInstruction
	(*FullMarketData_DeleteOrderInstruction)(nil),      // 5: golang.example.policy.FullMarketData_DeleteOrderInstruction
	(*FullMarketData_RemoveInstrumentInstruction)(nil), // 6: golang.example.policy.FullMarketData_RemoveInstrumentInstruction
	(*FullMarketData_InstrumentList_Subscribe)(nil),    // 7: golang.example.policy.FullMarketData_InstrumentList_Subscribe
	(*FullMarketData_InstrumentList_Unsubscribe)(nil),  // 8: golang.example.policy.FullMarketData_InstrumentList_Unsubscribe
	(*FullMarketData_InstrumentList_Request)(nil),      // 9: golang.example.policy.FullMarketData_InstrumentList_Request
	(*InstrumentStatus)(nil),                           // 10: golang.example.policy.InstrumentStatus
	(*FullMarketData_InstrumentList_Response)(nil),     // 11: golang.example.policy.FullMarketData_InstrumentList_Response
	(*FullMarketData_Instrument_Register)(nil),         // 12: golang.example.policy.FullMarketData_Instrument_Register
	(*FullMarketData_Instrument_Unregister)(nil),       // 13: golang.example.policy.FullMarketData_Instrument_Unregister
	(*FullMarketData_Instrument_InstrumentStatus)(nil), // 14: golang.example.policy.FullMarketData_Instrument_InstrumentStatus
}
var file_fullMarketData_proto_depIdxs = []int32{
	0,  // 0: golang.example.policy.FullMarketData_AddOrder.side:type_name -> golang.example.policy.OrderSide
	2,  // 1: golang.example.policy.FullMarketData_AddOrderInstruction.order:type_name -> golang.example.policy.FullMarketData_AddOrder
	10, // 2: golang.example.policy.FullMarketData_InstrumentList_Response.instruments:type_name -> golang.example.policy.InstrumentStatus
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_fullMarketData_proto_init() }
func file_fullMarketData_proto_init() {
	if File_fullMarketData_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fullMarketData_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_Clear); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_AddOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_AddOrderInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_ReduceVolumeInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_DeleteOrderInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_RemoveInstrumentInstruction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_InstrumentList_Subscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_InstrumentList_Unsubscribe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_InstrumentList_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstrumentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_InstrumentList_Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_Instrument_Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_Instrument_Unregister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fullMarketData_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullMarketData_Instrument_InstrumentStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fullMarketData_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fullMarketData_proto_goTypes,
		DependencyIndexes: file_fullMarketData_proto_depIdxs,
		EnumInfos:         file_fullMarketData_proto_enumTypes,
		MessageInfos:      file_fullMarketData_proto_msgTypes,
	}.Build()
	File_fullMarketData_proto = out.File
	file_fullMarketData_proto_rawDesc = nil
	file_fullMarketData_proto_goTypes = nil
	file_fullMarketData_proto_depIdxs = nil
}

// Typecode generated from: "FullMarketData_Clear"
const FullMarketData_ClearTypeCode uint32 = 3814555432

// Typecode generated from: "FullMarketData_AddOrder"
const FullMarketData_AddOrderTypeCode uint32 = 1499095309

// Typecode generated from: "FullMarketData_AddOrderInstruction"
const FullMarketData_AddOrderInstructionTypeCode uint32 = 2776788941

// Typecode generated from: "FullMarketData_ReduceVolumeInstruction"
const FullMarketData_ReduceVolumeInstructionTypeCode uint32 = 3454492882

// Typecode generated from: "FullMarketData_DeleteOrderInstruction"
const FullMarketData_DeleteOrderInstructionTypeCode uint32 = 3232336873

// Typecode generated from: "FullMarketData_RemoveInstrumentInstruction"
const FullMarketData_RemoveInstrumentInstructionTypeCode uint32 = 2383828232

// Typecode generated from: "FullMarketData_InstrumentList_Subscribe"
const FullMarketData_InstrumentList_SubscribeTypeCode uint32 = 3729865515

// Typecode generated from: "FullMarketData_InstrumentList_Unsubscribe"
const FullMarketData_InstrumentList_UnsubscribeTypeCode uint32 = 3624322483

// Typecode generated from: "FullMarketData_InstrumentList_Request"
const FullMarketData_InstrumentList_RequestTypeCode uint32 = 3427813634

// Typecode generated from: "InstrumentStatus"
const InstrumentStatusTypeCode uint32 = 963724194

// Typecode generated from: "FullMarketData_InstrumentList_Response"
const FullMarketData_InstrumentList_ResponseTypeCode uint32 = 2956075972

// Typecode generated from: "FullMarketData_Instrument_Register"
const FullMarketData_Instrument_RegisterTypeCode uint32 = 4269736598

// Typecode generated from: "FullMarketData_Instrument_Unregister"
const FullMarketData_Instrument_UnregisterTypeCode uint32 = 3438778386

// Typecode generated from: "FullMarketData_Instrument_InstrumentStatus"
const FullMarketData_Instrument_InstrumentStatusTypeCode uint32 = 1768595403

// true
// true
// false
// false
type FullMarketData_ClearWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_Clear
}

func (self *FullMarketData_ClearWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_ClearWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_ClearWrapper(
	data *FullMarketData_Clear) *FullMarketData_ClearWrapper {
	return &FullMarketData_ClearWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_ClearTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_Clear{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_Clear); ok {
				return NewFullMarketData_ClearWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_AddOrderWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_AddOrder
}

func (self *FullMarketData_AddOrderWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_AddOrderWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_AddOrderWrapper(
	data *FullMarketData_AddOrder) *FullMarketData_AddOrderWrapper {
	return &FullMarketData_AddOrderWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_AddOrderTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_AddOrder{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_AddOrder); ok {
				return NewFullMarketData_AddOrderWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_AddOrderInstructionWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_AddOrderInstruction
}

func (self *FullMarketData_AddOrderInstructionWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_AddOrderInstructionWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_AddOrderInstructionWrapper(
	data *FullMarketData_AddOrderInstruction) *FullMarketData_AddOrderInstructionWrapper {
	return &FullMarketData_AddOrderInstructionWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_AddOrderInstructionTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_AddOrderInstruction{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_AddOrderInstruction); ok {
				return NewFullMarketData_AddOrderInstructionWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_ReduceVolumeInstructionWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_ReduceVolumeInstruction
}

func (self *FullMarketData_ReduceVolumeInstructionWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_ReduceVolumeInstructionWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_ReduceVolumeInstructionWrapper(
	data *FullMarketData_ReduceVolumeInstruction) *FullMarketData_ReduceVolumeInstructionWrapper {
	return &FullMarketData_ReduceVolumeInstructionWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_ReduceVolumeInstructionTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_ReduceVolumeInstruction{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_ReduceVolumeInstruction); ok {
				return NewFullMarketData_ReduceVolumeInstructionWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_DeleteOrderInstructionWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_DeleteOrderInstruction
}

func (self *FullMarketData_DeleteOrderInstructionWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_DeleteOrderInstructionWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_DeleteOrderInstructionWrapper(
	data *FullMarketData_DeleteOrderInstruction) *FullMarketData_DeleteOrderInstructionWrapper {
	return &FullMarketData_DeleteOrderInstructionWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_DeleteOrderInstructionTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_DeleteOrderInstruction{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_DeleteOrderInstruction); ok {
				return NewFullMarketData_DeleteOrderInstructionWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_RemoveInstrumentInstructionWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_RemoveInstrumentInstruction
}

func (self *FullMarketData_RemoveInstrumentInstructionWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_RemoveInstrumentInstructionWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_RemoveInstrumentInstructionWrapper(
	data *FullMarketData_RemoveInstrumentInstruction) *FullMarketData_RemoveInstrumentInstructionWrapper {
	return &FullMarketData_RemoveInstrumentInstructionWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_RemoveInstrumentInstructionTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_RemoveInstrumentInstruction{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_RemoveInstrumentInstruction); ok {
				return NewFullMarketData_RemoveInstrumentInstructionWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_InstrumentList_SubscribeWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_InstrumentList_Subscribe
}

func (self *FullMarketData_InstrumentList_SubscribeWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_InstrumentList_SubscribeWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_InstrumentList_SubscribeWrapper(
	data *FullMarketData_InstrumentList_Subscribe) *FullMarketData_InstrumentList_SubscribeWrapper {
	return &FullMarketData_InstrumentList_SubscribeWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_InstrumentList_SubscribeTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_InstrumentList_Subscribe{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_InstrumentList_Subscribe); ok {
				return NewFullMarketData_InstrumentList_SubscribeWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_InstrumentList_UnsubscribeWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_InstrumentList_Unsubscribe
}

func (self *FullMarketData_InstrumentList_UnsubscribeWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_InstrumentList_UnsubscribeWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_InstrumentList_UnsubscribeWrapper(
	data *FullMarketData_InstrumentList_Unsubscribe) *FullMarketData_InstrumentList_UnsubscribeWrapper {
	return &FullMarketData_InstrumentList_UnsubscribeWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_InstrumentList_UnsubscribeTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_InstrumentList_Unsubscribe{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_InstrumentList_Unsubscribe); ok {
				return NewFullMarketData_InstrumentList_UnsubscribeWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_InstrumentList_RequestWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_InstrumentList_Request
}

func (self *FullMarketData_InstrumentList_RequestWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_InstrumentList_RequestWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_InstrumentList_RequestWrapper(
	data *FullMarketData_InstrumentList_Request) *FullMarketData_InstrumentList_RequestWrapper {
	return &FullMarketData_InstrumentList_RequestWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_InstrumentList_RequestTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_InstrumentList_Request{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_InstrumentList_Request); ok {
				return NewFullMarketData_InstrumentList_RequestWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type InstrumentStatusWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *InstrumentStatus
}

func (self *InstrumentStatusWrapper) Message() interface{} {
	return self.Data
}

func (self *InstrumentStatusWrapper) messageWrapper() interface{} {
	return self
}

func NewInstrumentStatusWrapper(
	data *InstrumentStatus) *InstrumentStatusWrapper {
	return &InstrumentStatusWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	InstrumentStatusTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &InstrumentStatus{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*InstrumentStatus); ok {
				return NewInstrumentStatusWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_InstrumentList_ResponseWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_InstrumentList_Response
}

func (self *FullMarketData_InstrumentList_ResponseWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_InstrumentList_ResponseWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_InstrumentList_ResponseWrapper(
	data *FullMarketData_InstrumentList_Response) *FullMarketData_InstrumentList_ResponseWrapper {
	return &FullMarketData_InstrumentList_ResponseWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_InstrumentList_ResponseTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_InstrumentList_Response{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_InstrumentList_Response); ok {
				return NewFullMarketData_InstrumentList_ResponseWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_Instrument_RegisterWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_Instrument_Register
}

func (self *FullMarketData_Instrument_RegisterWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_Instrument_RegisterWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_Instrument_RegisterWrapper(
	data *FullMarketData_Instrument_Register) *FullMarketData_Instrument_RegisterWrapper {
	return &FullMarketData_Instrument_RegisterWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_Instrument_RegisterTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_Instrument_Register{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_Instrument_Register); ok {
				return NewFullMarketData_Instrument_RegisterWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_Instrument_UnregisterWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_Instrument_Unregister
}

func (self *FullMarketData_Instrument_UnregisterWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_Instrument_UnregisterWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_Instrument_UnregisterWrapper(
	data *FullMarketData_Instrument_Unregister) *FullMarketData_Instrument_UnregisterWrapper {
	return &FullMarketData_Instrument_UnregisterWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_Instrument_UnregisterTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_Instrument_Unregister{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_Instrument_Unregister); ok {
				return NewFullMarketData_Instrument_UnregisterWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})

// true
// true
// false
// false
type FullMarketData_Instrument_InstrumentStatusWrapper struct {
	goprotoextra.BaseMessageWrapper
	Data *FullMarketData_Instrument_InstrumentStatus
}

func (self *FullMarketData_Instrument_InstrumentStatusWrapper) Message() interface{} {
	return self.Data
}

func (self *FullMarketData_Instrument_InstrumentStatusWrapper) messageWrapper() interface{} {
	return self
}

func NewFullMarketData_Instrument_InstrumentStatusWrapper(
	data *FullMarketData_Instrument_InstrumentStatus) *FullMarketData_Instrument_InstrumentStatusWrapper {
	return &FullMarketData_Instrument_InstrumentStatusWrapper{
		BaseMessageWrapper: goprotoextra.NewBaseMessageWrapper(),
		Data:               data,
	}
}

var _ = stream.Register(
	FullMarketData_Instrument_InstrumentStatusTypeCode,
	stream.TypeCodeData{
		CreateMessage: func() proto.Message {
			return &FullMarketData_Instrument_InstrumentStatus{}
		},
		CreateWrapper: func(
			data proto.Message) (goprotoextra.IMessageWrapper, error) {
			if msg, ok := data.(*FullMarketData_Instrument_InstrumentStatus); ok {
				return NewFullMarketData_Instrument_InstrumentStatusWrapper(
					msg), nil
			}
			return nil, goerrors.InvalidParam
		}})
